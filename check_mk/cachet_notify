#!/usr/bin/php
# Cachet Dashboard
<?php

if ($_SERVER['NOTIFY_WHAT'] != 'SERVICE') {
    echo "Not a service notification\n";
    exit(2);
}

if (!$_SERVER['NOTIFY_PARAMETER_CACHET_URL'] || !$_SERVER['NOTIFY_PARAMETER_API_KEY']) {
    echo "URL or API key not set\n";
    exit(2);
}

$cachet_url = $_SERVER['NOTIFY_PARAMETER_CACHET_URL']."/api/v1/";
$api_key = $_SERVER['NOTIFY_PARAMETER_API_KEY'];

if ($_SERVER['NOTIFY_PARAMETER_INCIDENT_PREFIX']) {
    $incident_prefix = $_SERVER['NOTIFY_PARAMETER_INCIDENT_PREFIX'];
} else {
    $incident_prefix = '>';
}

$cachet_notify_subscribers = true; // Enable subscribers notifcation for incidents creation and updates
$cachet_incident_visible = $_SERVER['NOTIFY_PARAMETER_INCIDENT_VISIBLE'] == 'yes';

# $cachet_component = $_SERVER['NOTIFY_PARAMETER_CACHET_COMPONENT'];
$cachet_component = $_SERVER['NOTIFY_CONTACTALIAS']; // get component name from contact alias
$service_name = $_SERVER['NOTIFY_SERVICEDESC'];
$service_status = $_SERVER['NOTIFY_SERVICESTATE'];
$service_status_type = 'HARD';
$service_output = $_SERVER['NOTIFY_SERVICEOUTPUT'];

date_default_timezone_set('Europe/Copenhagen');


$cachet_incident_subject="Issues with " . $cachet_component . ".";
$cachet_incident_message="We have detected a problem and we are currently looking into it.\n\n`" . date("D, d M Y G:i T") . "`";

$cachet_incident_fixed_subject="Issues with " . $cachet_component . " have been **resolved**.";
$cachet_incident_fixed_message="**Resolved** - The service is back online.\n\n`" . date("D, d M Y G:i T") . "` \n - - - \n **Investigating** - ";



define('CACHET_STATUS_INVESTIGATING', 1);
define('CACHET_STATUS_IDENTIFIED', 2);
define('CACHET_STATUS_WATCHING', 3);
define('CACHET_STATUS_FIXED', 4);

define('CACHET_COMPONENT_STATUS_OPERATIONAL', 1);
define('CACHET_COMPONENT_STATUS_PERFORMANCE_ISSUES', 2);
define('CACHET_COMPONENT_STATUS_PARTIAL_OUTAGE', 3);
define('CACHET_COMPONENT_STATUS_MAJOR_OUTAGE', 4);

function cachet_query($api_part, $action = 'GET', $data = null) {
        global $api_key, $cachet_url;

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $cachet_url . $api_part);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);

        if (in_array($action, array('GET', 'POST', 'PUT'))) {
                curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $action);
        }

        if ($data !== null && is_array($data)) {
                $ch_data = http_build_query($data);
                curl_setopt($ch, CURLOPT_POST, 1);
                curl_setopt($ch, CURLOPT_POSTFIELDS, $ch_data);
        }

        $ch_headers = array(
                'X-Cachet-Token: ' . $api_key
        );
        curl_setopt($ch, CURLOPT_HTTPHEADER, $ch_headers);

        curl_setopt($ch, CURLOPT_HEADER, false); // Don't return headers
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); // Return body
        $http_body = curl_exec($ch);
        $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        curl_close($ch);

        return array('code' => $http_code, 'body' => json_decode($http_body));
}

/* Find Cachet component ID */
$encoded_name = str_replace(' ', '%20', $cachet_component);
$result = cachet_query('components?name=' . $encoded_name);
if ($result['code'] != 200) {
        echo 'Can\'t query components' . "\n";
        exit(2);
}
$cachet_component_id = false;
foreach ($result['body']->data as $component) {
        if ($cachet_component == $component->name) { // We nailed it
            $cachet_component_id = $component->id;
            break; // Yes, bad.
        }
}

if ($cachet_component_id === false) {
        echo 'Can\'t find component "' . $cachet_component . '"' . "\n";
        exit(2);
}

/*
Determine what to to:
 - if PROBLEM and SOFT then don't cry just yet
 - if PROBLEM and HARD then create incident
 - if RECOVERY and SOFT then update incident
 - if RECOVERY and HARD then update incident

PROBLEM = !OK = (WARNING | CRITICAL | UNKONWN)
RECOVERY = OK
*/
if ($service_status == 'WARNING' && ($service_status_type == 'SOFT' || $service_status_type == 'HARD')) { // Hope it will be back soon
        //echo 'KO SOFT: not doing anything' . "\n";
        //exit(0);
        echo 'WARNING SOFT: creating incident' . "\n";
        $query = array(
                'name' => $incident_prefix . ' ' . $cachet_incident_subject . " **Watching**",
                'message' => $cachet_incident_message,
                'status' => CACHET_STATUS_WATCHING,
                'visible' => $cachet_incident_visible,
                'component_id' => $cachet_component_id,
                'component_status' => CACHET_COMPONENT_STATUS_PERFORMANCE_ISSUES,
                'notify' => $cachet_notify_subscribers,
        );
        $result = cachet_query('incidents', 'POST', $query);
        if ($result['code'] != 200) {
                echo 'Can\'t create incident' . "\n";
                exit(2);
        }
} elseif ($service_status == 'CRITICAL' && $service_status_type == 'SOFT') { // Something went wrong, let's notify
        echo 'KO HARD: creating incident' . "\n";
        $query = array(
                'name' => $incident_prefix . ' ' . $cachet_incident_subject . " **Watching**",
                'message' => $cachet_incident_message,
                'status' => CACHET_STATUS_WATCHING,
                'visible' => $cachet_incident_visible,
                'component_id' => $cachet_component_id,
                'component_status' => CACHET_COMPONENT_STATUS_PARTIAL_OUTAGE,
                'notify' => $cachet_notify_subscribers,
        );
        $result = cachet_query('incidents', 'POST', $query);
        if ($result['code'] != 200) {
                echo 'Can\'t create incident' . "\n";
                exit(2);
        }
} elseif ($service_status == 'CRITICAL' && $service_status_type == 'HARD') { // Something went wrong, let's notify
        echo 'KO HARD: creating incident' . "\n";
        $query = array(
                'name' => $incident_prefix . ' ' . $cachet_incident_subject. " **Investigating**",
                'message' => $cachet_incident_message,
                'status' => CACHET_STATUS_INVESTIGATING,
                'visible' => $cachet_incident_visible,
                'component_id' => $cachet_component_id,
                'component_status' => CACHET_COMPONENT_STATUS_MAJOR_OUTAGE,
                'notify' => $cachet_notify_subscribers,
        );
        $result = cachet_query('incidents', 'POST', $query);
        if ($result['code'] != 200) {
                echo 'Can\'t create incident' . "\n";
                exit(2);
        }
} elseif ($service_status == 'OK' && $service_status_type == 'SOFT') { // Recovery underway
        echo 'OK SOFT: updating incident' . "\n";
        /* Get the incident ID */

        $results = cachet_query('incidents?sort=id&order=asc&per_page=100&component_id=' . $cachet_component_id);
        if ($result['code'] != 200) {
                echo 'Can\'t get incidents' . "\n";
                exit(0);
        }
        $cachet_incident_id = false;
        $cachet_incident_message = "";
        foreach ($results['body']->data as $incident) {
                if ( (strpos($incident->name,$incident_prefix) === 0) and ($incident->status != CACHET_STATUS_FIXED)) {
                        $cachet_incident_id = $incident->id;
                        $cachet_incident_message = $incident->message;
                        break; // Yes, bad.
                }
        }
        if ($cachet_incident_id === false) {
                echo 'Can\'t find incident "' . $incident_prefix . ' ' . $service_name . '"' . "\n";
                exit(0);
        }

        /* Update the incident */
        $query = array(
                'name' => $incident_prefix . ' ' . $cachet_incident_fixed_subject,
                'message' => $cachet_incident_fixed_message . $cachet_incident_message,
                'status' => CACHET_STATUS_FIXED,
                'visible' => $cachet_incident_visible,
                'component_id' => $cachet_component_id,
                'component_status' => CACHET_COMPONENT_STATUS_OPERATIONAL,
                'notify' => $cachet_notify_subscribers,
                // 'id' => $cachet_incident_id,
        );
        $result = cachet_query('incidents/' . $cachet_incident_id, 'PUT', $query);
        if ($result['code'] != 200) {
                echo 'Can\'t update incident' . "\n";
                exit(0);
        }
} elseif ($service_status == 'OK' && $service_status_type == 'HARD') { // Recovery completed
        echo 'OK HARD: updating incident' . "\n";
        /* Get the incident ID */
        $results = cachet_query('incidents?sort=id&order=asc&per_page=100&component_id=' . $cachet_component_id);
        if ($result['code'] != 200) {
                echo 'Can\'t get incidents' . "\n";
                exit(0);
        }
        $cachet_incident_id = false;
        $cachet_incident_message = "";
        foreach ($results['body']->data as $incident) {
                if ( (strpos($incident->name,$incident_prefix) === 0) and ($incident->status != CACHET_STATUS_FIXED)) {
                        $cachet_incident_id = $incident->id;
                        $cachet_incident_message = $incident->message;
                        break; // Yes, bad.
                }
        }
        if ($cachet_incident_id === false) {
                echo 'Can\'t find incident "' . $incident_prefix . ' ' . $service_name . '"' . "\n";
                exit(0);
        }

        /* Update the incident */
        $query = array(
                'name' => $incident_prefix . ' ' . $cachet_incident_fixed_subject,
                'message' => $cachet_incident_fixed_message . $cachet_incident_message,
                'status' => CACHET_STATUS_FIXED,
                'visible' => $cachet_incident_visible,
                'component_id' => $cachet_component_id,
                'component_status' => CACHET_COMPONENT_STATUS_OPERATIONAL,
                'notify' => $cachet_notify_subscribers,
                // 'id' => $cachet_incident_id,
        );
        $result = cachet_query('incidents/' . $cachet_incident_id, 'PUT', $query);
        if ($result['code'] != 200) {
                echo 'Can\'t update incident' . "\n";
                exit(0);
        }
} else {
        echo 'Bad arguments' . "\n";
        exit(2);
}

exit(0);
